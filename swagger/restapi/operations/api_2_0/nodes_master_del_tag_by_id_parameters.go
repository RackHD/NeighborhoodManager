package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"

	strfmt "github.com/go-openapi/strfmt"
)

// NewNodesMasterDelTagByIDParams creates a new NodesMasterDelTagByIDParams object
// with the default values initialized.
func NewNodesMasterDelTagByIDParams() NodesMasterDelTagByIDParams {
	var ()
	return NodesMasterDelTagByIDParams{}
}

// NodesMasterDelTagByIDParams contains all the bound params for the nodes master del tag by Id operation
// typically these are obtained from a http.Request
//
// swagger:parameters nodesMasterDelTagById
type NodesMasterDelTagByIDParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request

	/*The tag identifier
	  Required: true
	  In: path
	*/
	TagName string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls
func (o *NodesMasterDelTagByIDParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error
	o.HTTPRequest = r

	rTagName, rhkTagName, _ := route.Params.GetOK("tagName")
	if err := o.bindTagName(rTagName, rhkTagName, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NodesMasterDelTagByIDParams) bindTagName(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	o.TagName = raw

	return nil
}
