package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/swagger/models"
)

/*ModifyUserOK Successfully modified the user

swagger:response modifyUserOK
*/
type ModifyUserOK struct {

	// In: body
	Payload ModifyUserOKBody `json:"body,omitempty"`
}

// NewModifyUserOK creates ModifyUserOK with default headers values
func NewModifyUserOK() *ModifyUserOK {
	return &ModifyUserOK{}
}

// WithPayload adds the payload to the modify user o k response
func (o *ModifyUserOK) WithPayload(payload ModifyUserOKBody) *ModifyUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify user o k response
func (o *ModifyUserOK) SetPayload(payload ModifyUserOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ModifyUserUnauthorized Unauthorized

swagger:response modifyUserUnauthorized
*/
type ModifyUserUnauthorized struct {

	// In: body
	Payload ModifyUserUnauthorizedBody `json:"body,omitempty"`
}

// NewModifyUserUnauthorized creates ModifyUserUnauthorized with default headers values
func NewModifyUserUnauthorized() *ModifyUserUnauthorized {
	return &ModifyUserUnauthorized{}
}

// WithPayload adds the payload to the modify user unauthorized response
func (o *ModifyUserUnauthorized) WithPayload(payload ModifyUserUnauthorizedBody) *ModifyUserUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify user unauthorized response
func (o *ModifyUserUnauthorized) SetPayload(payload ModifyUserUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ModifyUserForbidden Forbidden

swagger:response modifyUserForbidden
*/
type ModifyUserForbidden struct {

	// In: body
	Payload ModifyUserForbiddenBody `json:"body,omitempty"`
}

// NewModifyUserForbidden creates ModifyUserForbidden with default headers values
func NewModifyUserForbidden() *ModifyUserForbidden {
	return &ModifyUserForbidden{}
}

// WithPayload adds the payload to the modify user forbidden response
func (o *ModifyUserForbidden) WithPayload(payload ModifyUserForbiddenBody) *ModifyUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify user forbidden response
func (o *ModifyUserForbidden) SetPayload(payload ModifyUserForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ModifyUserDefault Unexpected error

swagger:response modifyUserDefault
*/
type ModifyUserDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewModifyUserDefault creates ModifyUserDefault with default headers values
func NewModifyUserDefault(code int) *ModifyUserDefault {
	if code <= 0 {
		code = 500
	}

	return &ModifyUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the modify user default response
func (o *ModifyUserDefault) WithStatusCode(code int) *ModifyUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the modify user default response
func (o *ModifyUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the modify user default response
func (o *ModifyUserDefault) WithPayload(payload *models.Error) *ModifyUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify user default response
func (o *ModifyUserDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
