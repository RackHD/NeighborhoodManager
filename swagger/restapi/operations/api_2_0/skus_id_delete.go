package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// SkusIDDeleteHandlerFunc turns a function with the right signature into a skus Id delete handler
type SkusIDDeleteHandlerFunc func(SkusIDDeleteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn SkusIDDeleteHandlerFunc) Handle(params SkusIDDeleteParams) middleware.Responder {
	return fn(params)
}

// SkusIDDeleteHandler interface for that can handle valid skus Id delete params
type SkusIDDeleteHandler interface {
	Handle(SkusIDDeleteParams) middleware.Responder
}

// NewSkusIDDelete creates a new http.Handler for the skus Id delete operation
func NewSkusIDDelete(ctx *middleware.Context, handler SkusIDDeleteHandler) *SkusIDDelete {
	return &SkusIDDelete{Context: ctx, Handler: handler}
}

/*SkusIDDelete swagger:route DELETE /skus/{identifier} /api/2.0 skusIdDelete

Delete a SKU

Delete the SKU with the specified identifier.

*/
type SkusIDDelete struct {
	Context *middleware.Context
	Handler SkusIDDeleteHandler
}

func (o *SkusIDDelete) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewSkusIDDeleteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// SkusIDDeleteNoContentBody skus ID delete no content body
// swagger:model SkusIDDeleteNoContentBody
type SkusIDDeleteNoContentBody interface{}
