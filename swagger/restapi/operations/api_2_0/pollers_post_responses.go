package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/swagger/models"
)

/*PollersPostCreated Poller created successfully

swagger:response pollersPostCreated
*/
type PollersPostCreated struct {

	// In: body
	Payload PollersPostCreatedBody `json:"body,omitempty"`
}

// NewPollersPostCreated creates PollersPostCreated with default headers values
func NewPollersPostCreated() *PollersPostCreated {
	return &PollersPostCreated{}
}

// WithPayload adds the payload to the pollers post created response
func (o *PollersPostCreated) WithPayload(payload PollersPostCreatedBody) *PollersPostCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pollers post created response
func (o *PollersPostCreated) SetPayload(payload PollersPostCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PollersPostCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*PollersPostDefault Unexpected error

swagger:response pollersPostDefault
*/
type PollersPostDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPollersPostDefault creates PollersPostDefault with default headers values
func NewPollersPostDefault(code int) *PollersPostDefault {
	if code <= 0 {
		code = 500
	}

	return &PollersPostDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the pollers post default response
func (o *PollersPostDefault) WithStatusCode(code int) *PollersPostDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the pollers post default response
func (o *PollersPostDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the pollers post default response
func (o *PollersPostDefault) WithPayload(payload *models.Error) *PollersPostDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pollers post default response
func (o *PollersPostDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PollersPostDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
