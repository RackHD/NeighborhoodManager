package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/swagger/models"
)

/*LookupsGetOK Successfully retrieved the list of lookups

swagger:response lookupsGetOK
*/
type LookupsGetOK struct {

	// In: body
	Payload []interface{} `json:"body,omitempty"`
}

// NewLookupsGetOK creates LookupsGetOK with default headers values
func NewLookupsGetOK() *LookupsGetOK {
	return &LookupsGetOK{}
}

// WithPayload adds the payload to the lookups get o k response
func (o *LookupsGetOK) WithPayload(payload []interface{}) *LookupsGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the lookups get o k response
func (o *LookupsGetOK) SetPayload(payload []interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LookupsGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*LookupsGetDefault Unexpected error

swagger:response lookupsGetDefault
*/
type LookupsGetDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewLookupsGetDefault creates LookupsGetDefault with default headers values
func NewLookupsGetDefault(code int) *LookupsGetDefault {
	if code <= 0 {
		code = 500
	}

	return &LookupsGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the lookups get default response
func (o *LookupsGetDefault) WithStatusCode(code int) *LookupsGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the lookups get default response
func (o *LookupsGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the lookups get default response
func (o *LookupsGetDefault) WithPayload(payload *models.Error) *LookupsGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the lookups get default response
func (o *LookupsGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LookupsGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
