package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/swagger/models"
)

/*FilesGetOK Successfully retrieved specified file

swagger:response filesGetOK
*/
type FilesGetOK struct {

	// In: body
	Payload runtime.File `json:"body,omitempty"`
}

// NewFilesGetOK creates FilesGetOK with default headers values
func NewFilesGetOK() *FilesGetOK {
	return &FilesGetOK{}
}

// WithPayload adds the payload to the files get o k response
func (o *FilesGetOK) WithPayload(payload runtime.File) *FilesGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the files get o k response
func (o *FilesGetOK) SetPayload(payload runtime.File) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FilesGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*FilesGetNotFound File not found

swagger:response filesGetNotFound
*/
type FilesGetNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewFilesGetNotFound creates FilesGetNotFound with default headers values
func NewFilesGetNotFound() *FilesGetNotFound {
	return &FilesGetNotFound{}
}

// WithPayload adds the payload to the files get not found response
func (o *FilesGetNotFound) WithPayload(payload *models.Error) *FilesGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the files get not found response
func (o *FilesGetNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FilesGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*FilesGetInternalServerError Failed to serve file request

swagger:response filesGetInternalServerError
*/
type FilesGetInternalServerError struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewFilesGetInternalServerError creates FilesGetInternalServerError with default headers values
func NewFilesGetInternalServerError() *FilesGetInternalServerError {
	return &FilesGetInternalServerError{}
}

// WithPayload adds the payload to the files get internal server error response
func (o *FilesGetInternalServerError) WithPayload(payload *models.Error) *FilesGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the files get internal server error response
func (o *FilesGetInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FilesGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*FilesGetDefault Unexpected error

swagger:response filesGetDefault
*/
type FilesGetDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewFilesGetDefault creates FilesGetDefault with default headers values
func NewFilesGetDefault(code int) *FilesGetDefault {
	if code <= 0 {
		code = 500
	}

	return &FilesGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the files get default response
func (o *FilesGetDefault) WithStatusCode(code int) *FilesGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the files get default response
func (o *FilesGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the files get default response
func (o *FilesGetDefault) WithPayload(payload *models.Error) *FilesGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the files get default response
func (o *FilesGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FilesGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
