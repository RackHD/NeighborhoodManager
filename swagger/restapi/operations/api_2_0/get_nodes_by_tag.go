package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetNodesByTagHandlerFunc turns a function with the right signature into a get nodes by tag handler
type GetNodesByTagHandlerFunc func(GetNodesByTagParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetNodesByTagHandlerFunc) Handle(params GetNodesByTagParams) middleware.Responder {
	return fn(params)
}

// GetNodesByTagHandler interface for that can handle valid get nodes by tag params
type GetNodesByTagHandler interface {
	Handle(GetNodesByTagParams) middleware.Responder
}

// NewGetNodesByTag creates a new http.Handler for the get nodes by tag operation
func NewGetNodesByTag(ctx *middleware.Context, handler GetNodesByTagHandler) *GetNodesByTag {
	return &GetNodesByTag{Context: ctx, Handler: handler}
}

/*GetNodesByTag swagger:route GET /tags/{tagName}/nodes /api/2.0 getNodesByTag

Get nodes with the specified tag

Get a list of nodes with the specified tag.

*/
type GetNodesByTag struct {
	Context *middleware.Context
	Handler GetNodesByTagHandler
}

func (o *GetNodesByTag) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetNodesByTagParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
