package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// WorkflowsGetTasksByNameHandlerFunc turns a function with the right signature into a workflows get tasks by name handler
type WorkflowsGetTasksByNameHandlerFunc func(WorkflowsGetTasksByNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn WorkflowsGetTasksByNameHandlerFunc) Handle(params WorkflowsGetTasksByNameParams) middleware.Responder {
	return fn(params)
}

// WorkflowsGetTasksByNameHandler interface for that can handle valid workflows get tasks by name params
type WorkflowsGetTasksByNameHandler interface {
	Handle(WorkflowsGetTasksByNameParams) middleware.Responder
}

// NewWorkflowsGetTasksByName creates a new http.Handler for the workflows get tasks by name operation
func NewWorkflowsGetTasksByName(ctx *middleware.Context, handler WorkflowsGetTasksByNameHandler) *WorkflowsGetTasksByName {
	return &WorkflowsGetTasksByName{Context: ctx, Handler: handler}
}

/*WorkflowsGetTasksByName swagger:route GET /workflows/tasks/{injectableName} /api/2.0 workflowsGetTasksByName

Get a workflow task

Get the task with the specified value of the injectableName property.

*/
type WorkflowsGetTasksByName struct {
	Context *middleware.Context
	Handler WorkflowsGetTasksByNameHandler
}

func (o *WorkflowsGetTasksByName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewWorkflowsGetTasksByNameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// WorkflowsGetTasksByNameOKBody workflows get tasks by name o k body
// swagger:model WorkflowsGetTasksByNameOKBody
type WorkflowsGetTasksByNameOKBody interface{}
