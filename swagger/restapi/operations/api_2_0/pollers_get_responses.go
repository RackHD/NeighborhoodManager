package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/swagger/models"
)

/*PollersGetOK Successful retrieval of the list of pollers

swagger:response pollersGetOK
*/
type PollersGetOK struct {

	// In: body
	Payload PollersGetOKBody `json:"body,omitempty"`
}

// NewPollersGetOK creates PollersGetOK with default headers values
func NewPollersGetOK() *PollersGetOK {
	return &PollersGetOK{}
}

// WithPayload adds the payload to the pollers get o k response
func (o *PollersGetOK) WithPayload(payload PollersGetOKBody) *PollersGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pollers get o k response
func (o *PollersGetOK) SetPayload(payload PollersGetOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PollersGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*PollersGetDefault Unexpected error

swagger:response pollersGetDefault
*/
type PollersGetDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPollersGetDefault creates PollersGetDefault with default headers values
func NewPollersGetDefault(code int) *PollersGetDefault {
	if code <= 0 {
		code = 500
	}

	return &PollersGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the pollers get default response
func (o *PollersGetDefault) WithStatusCode(code int) *PollersGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the pollers get default response
func (o *PollersGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the pollers get default response
func (o *PollersGetDefault) WithPayload(payload *models.Error) *PollersGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pollers get default response
func (o *PollersGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PollersGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
