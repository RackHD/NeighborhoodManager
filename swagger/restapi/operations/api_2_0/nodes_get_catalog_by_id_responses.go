package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/swagger/models"
)

/*NodesGetCatalogByIDOK Successfully retrieved catalogs of specified node

swagger:response nodesGetCatalogByIdOK
*/
type NodesGetCatalogByIDOK struct {

	// In: body
	Payload NodesGetCatalogByIDOKBody `json:"body,omitempty"`
}

// NewNodesGetCatalogByIDOK creates NodesGetCatalogByIDOK with default headers values
func NewNodesGetCatalogByIDOK() *NodesGetCatalogByIDOK {
	return &NodesGetCatalogByIDOK{}
}

// WithPayload adds the payload to the nodes get catalog by Id o k response
func (o *NodesGetCatalogByIDOK) WithPayload(payload NodesGetCatalogByIDOKBody) *NodesGetCatalogByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes get catalog by Id o k response
func (o *NodesGetCatalogByIDOK) SetPayload(payload NodesGetCatalogByIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesGetCatalogByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*NodesGetCatalogByIDNotFound The specified node was not found

swagger:response nodesGetCatalogByIdNotFound
*/
type NodesGetCatalogByIDNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewNodesGetCatalogByIDNotFound creates NodesGetCatalogByIDNotFound with default headers values
func NewNodesGetCatalogByIDNotFound() *NodesGetCatalogByIDNotFound {
	return &NodesGetCatalogByIDNotFound{}
}

// WithPayload adds the payload to the nodes get catalog by Id not found response
func (o *NodesGetCatalogByIDNotFound) WithPayload(payload *models.Error) *NodesGetCatalogByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes get catalog by Id not found response
func (o *NodesGetCatalogByIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesGetCatalogByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NodesGetCatalogByIDDefault Unexpected error

swagger:response nodesGetCatalogByIdDefault
*/
type NodesGetCatalogByIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewNodesGetCatalogByIDDefault creates NodesGetCatalogByIDDefault with default headers values
func NewNodesGetCatalogByIDDefault(code int) *NodesGetCatalogByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &NodesGetCatalogByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the nodes get catalog by Id default response
func (o *NodesGetCatalogByIDDefault) WithStatusCode(code int) *NodesGetCatalogByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the nodes get catalog by Id default response
func (o *NodesGetCatalogByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the nodes get catalog by Id default response
func (o *NodesGetCatalogByIDDefault) WithPayload(payload *models.Error) *NodesGetCatalogByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes get catalog by Id default response
func (o *NodesGetCatalogByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesGetCatalogByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
