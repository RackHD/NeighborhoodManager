package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*NodesGetAllOK Successfully retrieved the list of nodes

swagger:response nodesGetAllOK
*/
type NodesGetAllOK struct {

	// In: body
	Payload []interface{} `json:"body,omitempty"`
}

// NewNodesGetAllOK creates NodesGetAllOK with default headers values
func NewNodesGetAllOK() *NodesGetAllOK {
	return &NodesGetAllOK{}
}

// WithPayload adds the payload to the nodes get all o k response
func (o *NodesGetAllOK) WithPayload(payload []interface{}) *NodesGetAllOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes get all o k response
func (o *NodesGetAllOK) SetPayload(payload []interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesGetAllOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*NodesGetAllBadRequest Bad Request

swagger:response nodesGetAllBadRequest
*/
type NodesGetAllBadRequest struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewNodesGetAllBadRequest creates NodesGetAllBadRequest with default headers values
func NewNodesGetAllBadRequest() *NodesGetAllBadRequest {
	return &NodesGetAllBadRequest{}
}

// WithPayload adds the payload to the nodes get all bad request response
func (o *NodesGetAllBadRequest) WithPayload(payload *models.Error) *NodesGetAllBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes get all bad request response
func (o *NodesGetAllBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesGetAllBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NodesGetAllDefault Unexpected error

swagger:response nodesGetAllDefault
*/
type NodesGetAllDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewNodesGetAllDefault creates NodesGetAllDefault with default headers values
func NewNodesGetAllDefault(code int) *NodesGetAllDefault {
	if code <= 0 {
		code = 500
	}

	return &NodesGetAllDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the nodes get all default response
func (o *NodesGetAllDefault) WithStatusCode(code int) *NodesGetAllDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the nodes get all default response
func (o *NodesGetAllDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the nodes get all default response
func (o *NodesGetAllDefault) WithPayload(payload *models.Error) *NodesGetAllDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes get all default response
func (o *NodesGetAllDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesGetAllDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
