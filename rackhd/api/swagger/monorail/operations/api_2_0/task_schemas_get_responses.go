package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*TaskSchemasGetOK Successfully retrieved the list of task schema names

swagger:response taskSchemasGetOK
*/
type TaskSchemasGetOK struct {

	// In: body
	Payload TaskSchemasGetOKBody `json:"body,omitempty"`
}

// NewTaskSchemasGetOK creates TaskSchemasGetOK with default headers values
func NewTaskSchemasGetOK() *TaskSchemasGetOK {
	return &TaskSchemasGetOK{}
}

// WithPayload adds the payload to the task schemas get o k response
func (o *TaskSchemasGetOK) WithPayload(payload TaskSchemasGetOKBody) *TaskSchemasGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the task schemas get o k response
func (o *TaskSchemasGetOK) SetPayload(payload TaskSchemasGetOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TaskSchemasGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*TaskSchemasGetDefault Error

swagger:response taskSchemasGetDefault
*/
type TaskSchemasGetDefault struct {
	_statusCode int

	// In: body
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewTaskSchemasGetDefault creates TaskSchemasGetDefault with default headers values
func NewTaskSchemasGetDefault(code int) *TaskSchemasGetDefault {
	if code <= 0 {
		code = 500
	}

	return &TaskSchemasGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the task schemas get default response
func (o *TaskSchemasGetDefault) WithStatusCode(code int) *TaskSchemasGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the task schemas get default response
func (o *TaskSchemasGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the task schemas get default response
func (o *TaskSchemasGetDefault) WithPayload(payload *models.ErrorResponse) *TaskSchemasGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the task schemas get default response
func (o *TaskSchemasGetDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TaskSchemasGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
