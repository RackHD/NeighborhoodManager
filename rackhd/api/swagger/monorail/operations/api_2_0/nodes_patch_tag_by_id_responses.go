package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*NodesPatchTagByIDOK Successfully modified node tag(s).

swagger:response nodesPatchTagByIdOK
*/
type NodesPatchTagByIDOK struct {

	// In: body
	Payload NodesPatchTagByIDOKBody `json:"body,omitempty"`
}

// NewNodesPatchTagByIDOK creates NodesPatchTagByIDOK with default headers values
func NewNodesPatchTagByIDOK() *NodesPatchTagByIDOK {
	return &NodesPatchTagByIDOK{}
}

// WithPayload adds the payload to the nodes patch tag by Id o k response
func (o *NodesPatchTagByIDOK) WithPayload(payload NodesPatchTagByIDOKBody) *NodesPatchTagByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes patch tag by Id o k response
func (o *NodesPatchTagByIDOK) SetPayload(payload NodesPatchTagByIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesPatchTagByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*NodesPatchTagByIDNotFound The specified node was not found.

swagger:response nodesPatchTagByIdNotFound
*/
type NodesPatchTagByIDNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewNodesPatchTagByIDNotFound creates NodesPatchTagByIDNotFound with default headers values
func NewNodesPatchTagByIDNotFound() *NodesPatchTagByIDNotFound {
	return &NodesPatchTagByIDNotFound{}
}

// WithPayload adds the payload to the nodes patch tag by Id not found response
func (o *NodesPatchTagByIDNotFound) WithPayload(payload *models.Error) *NodesPatchTagByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes patch tag by Id not found response
func (o *NodesPatchTagByIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesPatchTagByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NodesPatchTagByIDDefault Unexpected error

swagger:response nodesPatchTagByIdDefault
*/
type NodesPatchTagByIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewNodesPatchTagByIDDefault creates NodesPatchTagByIDDefault with default headers values
func NewNodesPatchTagByIDDefault(code int) *NodesPatchTagByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &NodesPatchTagByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the nodes patch tag by Id default response
func (o *NodesPatchTagByIDDefault) WithStatusCode(code int) *NodesPatchTagByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the nodes patch tag by Id default response
func (o *NodesPatchTagByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the nodes patch tag by Id default response
func (o *NodesPatchTagByIDDefault) WithPayload(payload *models.Error) *NodesPatchTagByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes patch tag by Id default response
func (o *NodesPatchTagByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesPatchTagByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
