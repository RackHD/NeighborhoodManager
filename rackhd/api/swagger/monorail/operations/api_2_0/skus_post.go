package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// SkusPostHandlerFunc turns a function with the right signature into a skus post handler
type SkusPostHandlerFunc func(context.Context, SkusPostParams) middleware.Responder

// Handle executing the request and returning a response
func (fn SkusPostHandlerFunc) Handle(ctx context.Context, params SkusPostParams) middleware.Responder {
	return fn(ctx, params)
}

// SkusPostHandler interface for that can handle valid skus post params
type SkusPostHandler interface {
	Handle(context.Context, SkusPostParams) middleware.Responder
}

// NewSkusPost creates a new http.Handler for the skus post operation
func NewSkusPost(ctx *middleware.Context, handler SkusPostHandler) *SkusPost {
	return &SkusPost{Context: ctx, Handler: handler}
}

/*SkusPost swagger:route POST /skus /api/2.0 skusPost

Post a SKU

Create a new SKU.

*/
type SkusPost struct {
	Context *middleware.Context
	Handler SkusPostHandler
}

func (o *SkusPost) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewSkusPostParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// SkusPostCreatedBody skus post created body
// swagger:model SkusPostCreatedBody
type SkusPostCreatedBody interface{}
