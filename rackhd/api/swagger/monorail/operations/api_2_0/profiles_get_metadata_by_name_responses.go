package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*ProfilesGetMetadataByNameOK Successfully returned the profile

swagger:response profilesGetMetadataByNameOK
*/
type ProfilesGetMetadataByNameOK struct {

	// In: body
	Payload ProfilesGetMetadataByNameOKBody `json:"body,omitempty"`
}

// NewProfilesGetMetadataByNameOK creates ProfilesGetMetadataByNameOK with default headers values
func NewProfilesGetMetadataByNameOK() *ProfilesGetMetadataByNameOK {
	return &ProfilesGetMetadataByNameOK{}
}

// WithPayload adds the payload to the profiles get metadata by name o k response
func (o *ProfilesGetMetadataByNameOK) WithPayload(payload ProfilesGetMetadataByNameOKBody) *ProfilesGetMetadataByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profiles get metadata by name o k response
func (o *ProfilesGetMetadataByNameOK) SetPayload(payload ProfilesGetMetadataByNameOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfilesGetMetadataByNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ProfilesGetMetadataByNameNotFound The profile with the specified identifier was not found

swagger:response profilesGetMetadataByNameNotFound
*/
type ProfilesGetMetadataByNameNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewProfilesGetMetadataByNameNotFound creates ProfilesGetMetadataByNameNotFound with default headers values
func NewProfilesGetMetadataByNameNotFound() *ProfilesGetMetadataByNameNotFound {
	return &ProfilesGetMetadataByNameNotFound{}
}

// WithPayload adds the payload to the profiles get metadata by name not found response
func (o *ProfilesGetMetadataByNameNotFound) WithPayload(payload *models.Error) *ProfilesGetMetadataByNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profiles get metadata by name not found response
func (o *ProfilesGetMetadataByNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfilesGetMetadataByNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ProfilesGetMetadataByNameDefault Unexpected error

swagger:response profilesGetMetadataByNameDefault
*/
type ProfilesGetMetadataByNameDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewProfilesGetMetadataByNameDefault creates ProfilesGetMetadataByNameDefault with default headers values
func NewProfilesGetMetadataByNameDefault(code int) *ProfilesGetMetadataByNameDefault {
	if code <= 0 {
		code = 500
	}

	return &ProfilesGetMetadataByNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the profiles get metadata by name default response
func (o *ProfilesGetMetadataByNameDefault) WithStatusCode(code int) *ProfilesGetMetadataByNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the profiles get metadata by name default response
func (o *ProfilesGetMetadataByNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the profiles get metadata by name default response
func (o *ProfilesGetMetadataByNameDefault) WithPayload(payload *models.Error) *ProfilesGetMetadataByNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profiles get metadata by name default response
func (o *ProfilesGetMetadataByNameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfilesGetMetadataByNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
