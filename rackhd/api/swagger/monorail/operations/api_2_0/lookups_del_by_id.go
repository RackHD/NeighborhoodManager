package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// LookupsDelByIDHandlerFunc turns a function with the right signature into a lookups del by Id handler
type LookupsDelByIDHandlerFunc func(context.Context, LookupsDelByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LookupsDelByIDHandlerFunc) Handle(ctx context.Context, params LookupsDelByIDParams) middleware.Responder {
	return fn(ctx, params)
}

// LookupsDelByIDHandler interface for that can handle valid lookups del by Id params
type LookupsDelByIDHandler interface {
	Handle(context.Context, LookupsDelByIDParams) middleware.Responder
}

// NewLookupsDelByID creates a new http.Handler for the lookups del by Id operation
func NewLookupsDelByID(ctx *middleware.Context, handler LookupsDelByIDHandler) *LookupsDelByID {
	return &LookupsDelByID{Context: ctx, Handler: handler}
}

/*LookupsDelByID swagger:route DELETE /lookups/{id} /api/2.0 lookupsDelById

Delete a lookup

Delete the specified lookup.

*/
type LookupsDelByID struct {
	Context *middleware.Context
	Handler LookupsDelByIDHandler
}

func (o *LookupsDelByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewLookupsDelByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
