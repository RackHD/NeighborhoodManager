package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*FilesMetadataGetOK Successfully retrieved metadata of the specified file

swagger:response filesMetadataGetOK
*/
type FilesMetadataGetOK struct {

	// In: body
	Payload FilesMetadataGetOKBody `json:"body,omitempty"`
}

// NewFilesMetadataGetOK creates FilesMetadataGetOK with default headers values
func NewFilesMetadataGetOK() *FilesMetadataGetOK {
	return &FilesMetadataGetOK{}
}

// WithPayload adds the payload to the files metadata get o k response
func (o *FilesMetadataGetOK) WithPayload(payload FilesMetadataGetOKBody) *FilesMetadataGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the files metadata get o k response
func (o *FilesMetadataGetOK) SetPayload(payload FilesMetadataGetOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FilesMetadataGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*FilesMetadataGetNotFound File not found

swagger:response filesMetadataGetNotFound
*/
type FilesMetadataGetNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewFilesMetadataGetNotFound creates FilesMetadataGetNotFound with default headers values
func NewFilesMetadataGetNotFound() *FilesMetadataGetNotFound {
	return &FilesMetadataGetNotFound{}
}

// WithPayload adds the payload to the files metadata get not found response
func (o *FilesMetadataGetNotFound) WithPayload(payload *models.Error) *FilesMetadataGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the files metadata get not found response
func (o *FilesMetadataGetNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FilesMetadataGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*FilesMetadataGetInternalServerError Failed to serve file metadata request

swagger:response filesMetadataGetInternalServerError
*/
type FilesMetadataGetInternalServerError struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewFilesMetadataGetInternalServerError creates FilesMetadataGetInternalServerError with default headers values
func NewFilesMetadataGetInternalServerError() *FilesMetadataGetInternalServerError {
	return &FilesMetadataGetInternalServerError{}
}

// WithPayload adds the payload to the files metadata get internal server error response
func (o *FilesMetadataGetInternalServerError) WithPayload(payload *models.Error) *FilesMetadataGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the files metadata get internal server error response
func (o *FilesMetadataGetInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FilesMetadataGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*FilesMetadataGetDefault Unexpected error

swagger:response filesMetadataGetDefault
*/
type FilesMetadataGetDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewFilesMetadataGetDefault creates FilesMetadataGetDefault with default headers values
func NewFilesMetadataGetDefault(code int) *FilesMetadataGetDefault {
	if code <= 0 {
		code = 500
	}

	return &FilesMetadataGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the files metadata get default response
func (o *FilesMetadataGetDefault) WithStatusCode(code int) *FilesMetadataGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the files metadata get default response
func (o *FilesMetadataGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the files metadata get default response
func (o *FilesMetadataGetDefault) WithPayload(payload *models.Error) *FilesMetadataGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the files metadata get default response
func (o *FilesMetadataGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FilesMetadataGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
