package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ProfilesGetMetadataHandlerFunc turns a function with the right signature into a profiles get metadata handler
type ProfilesGetMetadataHandlerFunc func(context.Context, ProfilesGetMetadataParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ProfilesGetMetadataHandlerFunc) Handle(ctx context.Context, params ProfilesGetMetadataParams) middleware.Responder {
	return fn(ctx, params)
}

// ProfilesGetMetadataHandler interface for that can handle valid profiles get metadata params
type ProfilesGetMetadataHandler interface {
	Handle(context.Context, ProfilesGetMetadataParams) middleware.Responder
}

// NewProfilesGetMetadata creates a new http.Handler for the profiles get metadata operation
func NewProfilesGetMetadata(ctx *middleware.Context, handler ProfilesGetMetadataHandler) *ProfilesGetMetadata {
	return &ProfilesGetMetadata{Context: ctx, Handler: handler}
}

/*ProfilesGetMetadata swagger:route GET /profiles/metadata /api/2.0 profilesGetMetadata

Get list of profile metadata

Get the list of metadata associated with all known profiles.

*/
type ProfilesGetMetadata struct {
	Context *middleware.Context
	Handler ProfilesGetMetadataHandler
}

func (o *ProfilesGetMetadata) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewProfilesGetMetadataParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ProfilesGetMetadataOKBody profiles get metadata o k body
// swagger:model ProfilesGetMetadataOKBody
type ProfilesGetMetadataOKBody interface{}
