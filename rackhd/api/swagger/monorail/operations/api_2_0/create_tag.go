package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateTagHandlerFunc turns a function with the right signature into a create tag handler
type CreateTagHandlerFunc func(context.Context, CreateTagParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateTagHandlerFunc) Handle(ctx context.Context, params CreateTagParams) middleware.Responder {
	return fn(ctx, params)
}

// CreateTagHandler interface for that can handle valid create tag params
type CreateTagHandler interface {
	Handle(context.Context, CreateTagParams) middleware.Responder
}

// NewCreateTag creates a new http.Handler for the create tag operation
func NewCreateTag(ctx *middleware.Context, handler CreateTagHandler) *CreateTag {
	return &CreateTag{Context: ctx, Handler: handler}
}

/*CreateTag swagger:route POST /tags /api/2.0 createTag

Post a tag

Create a new tag.

*/
type CreateTag struct {
	Context *middleware.Context
	Handler CreateTagHandler
}

func (o *CreateTag) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewCreateTagParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// CreateTagCreatedBody create tag created body
// swagger:model CreateTagCreatedBody
type CreateTagCreatedBody interface{}
