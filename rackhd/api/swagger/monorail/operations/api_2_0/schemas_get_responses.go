package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*SchemasGetOK Successfully retrieved the list of schemas

swagger:response schemasGetOK
*/
type SchemasGetOK struct {

	// In: body
	Payload SchemasGetOKBody `json:"body,omitempty"`
}

// NewSchemasGetOK creates SchemasGetOK with default headers values
func NewSchemasGetOK() *SchemasGetOK {
	return &SchemasGetOK{}
}

// WithPayload adds the payload to the schemas get o k response
func (o *SchemasGetOK) WithPayload(payload SchemasGetOKBody) *SchemasGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the schemas get o k response
func (o *SchemasGetOK) SetPayload(payload SchemasGetOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SchemasGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*SchemasGetDefault Error

swagger:response schemasGetDefault
*/
type SchemasGetDefault struct {
	_statusCode int

	// In: body
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSchemasGetDefault creates SchemasGetDefault with default headers values
func NewSchemasGetDefault(code int) *SchemasGetDefault {
	if code <= 0 {
		code = 500
	}

	return &SchemasGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the schemas get default response
func (o *SchemasGetDefault) WithStatusCode(code int) *SchemasGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the schemas get default response
func (o *SchemasGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the schemas get default response
func (o *SchemasGetDefault) WithPayload(payload *models.ErrorResponse) *SchemasGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the schemas get default response
func (o *SchemasGetDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SchemasGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
