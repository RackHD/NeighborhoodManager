package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*NodesPostSSHByIDCreated Successfull created ssh settings

swagger:response nodesPostSshByIdCreated
*/
type NodesPostSSHByIDCreated struct {
}

// NewNodesPostSSHByIDCreated creates NodesPostSSHByIDCreated with default headers values
func NewNodesPostSSHByIDCreated() *NodesPostSSHByIDCreated {
	return &NodesPostSSHByIDCreated{}
}

// WriteResponse to the client
func (o *NodesPostSSHByIDCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
}

/*NodesPostSSHByIDNotFound The specified node was not found or has no ssh settings.

swagger:response nodesPostSshByIdNotFound
*/
type NodesPostSSHByIDNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewNodesPostSSHByIDNotFound creates NodesPostSSHByIDNotFound with default headers values
func NewNodesPostSSHByIDNotFound() *NodesPostSSHByIDNotFound {
	return &NodesPostSSHByIDNotFound{}
}

// WithPayload adds the payload to the nodes post Ssh by Id not found response
func (o *NodesPostSSHByIDNotFound) WithPayload(payload *models.Error) *NodesPostSSHByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes post Ssh by Id not found response
func (o *NodesPostSSHByIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesPostSSHByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NodesPostSSHByIDDefault Unexpected error

swagger:response nodesPostSshByIdDefault
*/
type NodesPostSSHByIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewNodesPostSSHByIDDefault creates NodesPostSSHByIDDefault with default headers values
func NewNodesPostSSHByIDDefault(code int) *NodesPostSSHByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &NodesPostSSHByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the nodes post Ssh by Id default response
func (o *NodesPostSSHByIDDefault) WithStatusCode(code int) *NodesPostSSHByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the nodes post Ssh by Id default response
func (o *NodesPostSSHByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the nodes post Ssh by Id default response
func (o *NodesPostSSHByIDDefault) WithPayload(payload *models.Error) *NodesPostSSHByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the nodes post Ssh by Id default response
func (o *NodesPostSSHByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NodesPostSSHByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
