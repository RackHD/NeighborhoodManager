package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// TemplatesHeadByNameHandlerFunc turns a function with the right signature into a templates head by name handler
type TemplatesHeadByNameHandlerFunc func(context.Context, TemplatesHeadByNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn TemplatesHeadByNameHandlerFunc) Handle(ctx context.Context, params TemplatesHeadByNameParams) middleware.Responder {
	return fn(ctx, params)
}

// TemplatesHeadByNameHandler interface for that can handle valid templates head by name params
type TemplatesHeadByNameHandler interface {
	Handle(context.Context, TemplatesHeadByNameParams) middleware.Responder
}

// NewTemplatesHeadByName creates a new http.Handler for the templates head by name operation
func NewTemplatesHeadByName(ctx *middleware.Context, handler TemplatesHeadByNameHandler) *TemplatesHeadByName {
	return &TemplatesHeadByName{Context: ctx, Handler: handler}
}

/*TemplatesHeadByName swagger:route HEAD /templates/{name} /api/2.0 templatesHeadByName

Get headers of the specified template

Get the template headers with the specified name. Only gets headers and returns no body.

*/
type TemplatesHeadByName struct {
	Context *middleware.Context
	Handler TemplatesHeadByNameHandler
}

func (o *TemplatesHeadByName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewTemplatesHeadByNameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// TemplatesHeadByNameOKBody templates head by name o k body
// swagger:model TemplatesHeadByNameOKBody
type TemplatesHeadByNameOKBody interface{}
