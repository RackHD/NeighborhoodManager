package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*SkusGetOK Successfully retrieved the list of SKUs

swagger:response skusGetOK
*/
type SkusGetOK struct {

	// In: body
	Payload SkusGetOKBody `json:"body,omitempty"`
}

// NewSkusGetOK creates SkusGetOK with default headers values
func NewSkusGetOK() *SkusGetOK {
	return &SkusGetOK{}
}

// WithPayload adds the payload to the skus get o k response
func (o *SkusGetOK) WithPayload(payload SkusGetOKBody) *SkusGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the skus get o k response
func (o *SkusGetOK) SetPayload(payload SkusGetOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SkusGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*SkusGetDefault Unexpected error

swagger:response skusGetDefault
*/
type SkusGetDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewSkusGetDefault creates SkusGetDefault with default headers values
func NewSkusGetDefault(code int) *SkusGetDefault {
	if code <= 0 {
		code = 500
	}

	return &SkusGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the skus get default response
func (o *SkusGetDefault) WithStatusCode(code int) *SkusGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the skus get default response
func (o *SkusGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the skus get default response
func (o *SkusGetDefault) WithPayload(payload *models.Error) *SkusGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the skus get default response
func (o *SkusGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SkusGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
