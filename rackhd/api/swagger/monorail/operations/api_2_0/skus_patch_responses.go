package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*SkusPatchOK Successfully modified the specified SKU

swagger:response skusPatchOK
*/
type SkusPatchOK struct {

	// In: body
	Payload SkusPatchOKBody `json:"body,omitempty"`
}

// NewSkusPatchOK creates SkusPatchOK with default headers values
func NewSkusPatchOK() *SkusPatchOK {
	return &SkusPatchOK{}
}

// WithPayload adds the payload to the skus patch o k response
func (o *SkusPatchOK) WithPayload(payload SkusPatchOKBody) *SkusPatchOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the skus patch o k response
func (o *SkusPatchOK) SetPayload(payload SkusPatchOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SkusPatchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*SkusPatchNotFound The SKU with the specified identifier was not found

swagger:response skusPatchNotFound
*/
type SkusPatchNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewSkusPatchNotFound creates SkusPatchNotFound with default headers values
func NewSkusPatchNotFound() *SkusPatchNotFound {
	return &SkusPatchNotFound{}
}

// WithPayload adds the payload to the skus patch not found response
func (o *SkusPatchNotFound) WithPayload(payload *models.Error) *SkusPatchNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the skus patch not found response
func (o *SkusPatchNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SkusPatchNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*SkusPatchInternalServerError SKU patch failed

swagger:response skusPatchInternalServerError
*/
type SkusPatchInternalServerError struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewSkusPatchInternalServerError creates SkusPatchInternalServerError with default headers values
func NewSkusPatchInternalServerError() *SkusPatchInternalServerError {
	return &SkusPatchInternalServerError{}
}

// WithPayload adds the payload to the skus patch internal server error response
func (o *SkusPatchInternalServerError) WithPayload(payload *models.Error) *SkusPatchInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the skus patch internal server error response
func (o *SkusPatchInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SkusPatchInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*SkusPatchDefault Unexpected error

swagger:response skusPatchDefault
*/
type SkusPatchDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewSkusPatchDefault creates SkusPatchDefault with default headers values
func NewSkusPatchDefault(code int) *SkusPatchDefault {
	if code <= 0 {
		code = 500
	}

	return &SkusPatchDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the skus patch default response
func (o *SkusPatchDefault) WithStatusCode(code int) *SkusPatchDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the skus patch default response
func (o *SkusPatchDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the skus patch default response
func (o *SkusPatchDefault) WithPayload(payload *models.Error) *SkusPatchDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the skus patch default response
func (o *SkusPatchDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SkusPatchDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
