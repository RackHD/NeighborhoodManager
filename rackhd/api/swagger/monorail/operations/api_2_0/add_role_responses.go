package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/rackhd/api/swagger/models"
)

/*AddRoleCreated Successfully created a new role

swagger:response addRoleCreated
*/
type AddRoleCreated struct {

	// In: body
	Payload AddRoleCreatedBody `json:"body,omitempty"`
}

// NewAddRoleCreated creates AddRoleCreated with default headers values
func NewAddRoleCreated() *AddRoleCreated {
	return &AddRoleCreated{}
}

// WithPayload adds the payload to the add role created response
func (o *AddRoleCreated) WithPayload(payload AddRoleCreatedBody) *AddRoleCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role created response
func (o *AddRoleCreated) SetPayload(payload AddRoleCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*AddRoleUnauthorized Unauthorized

swagger:response addRoleUnauthorized
*/
type AddRoleUnauthorized struct {

	// In: body
	Payload AddRoleUnauthorizedBody `json:"body,omitempty"`
}

// NewAddRoleUnauthorized creates AddRoleUnauthorized with default headers values
func NewAddRoleUnauthorized() *AddRoleUnauthorized {
	return &AddRoleUnauthorized{}
}

// WithPayload adds the payload to the add role unauthorized response
func (o *AddRoleUnauthorized) WithPayload(payload AddRoleUnauthorizedBody) *AddRoleUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role unauthorized response
func (o *AddRoleUnauthorized) SetPayload(payload AddRoleUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*AddRoleForbidden Forbidden

swagger:response addRoleForbidden
*/
type AddRoleForbidden struct {

	// In: body
	Payload AddRoleForbiddenBody `json:"body,omitempty"`
}

// NewAddRoleForbidden creates AddRoleForbidden with default headers values
func NewAddRoleForbidden() *AddRoleForbidden {
	return &AddRoleForbidden{}
}

// WithPayload adds the payload to the add role forbidden response
func (o *AddRoleForbidden) WithPayload(payload AddRoleForbiddenBody) *AddRoleForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role forbidden response
func (o *AddRoleForbidden) SetPayload(payload AddRoleForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*AddRoleDefault Unexpected error

swagger:response addRoleDefault
*/
type AddRoleDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddRoleDefault creates AddRoleDefault with default headers values
func NewAddRoleDefault(code int) *AddRoleDefault {
	if code <= 0 {
		code = 500
	}

	return &AddRoleDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add role default response
func (o *AddRoleDefault) WithStatusCode(code int) *AddRoleDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add role default response
func (o *AddRoleDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add role default response
func (o *AddRoleDefault) WithPayload(payload *models.Error) *AddRoleDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role default response
func (o *AddRoleDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
