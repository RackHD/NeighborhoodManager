package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ModifyRoleHandlerFunc turns a function with the right signature into a modify role handler
type ModifyRoleHandlerFunc func(context.Context, ModifyRoleParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ModifyRoleHandlerFunc) Handle(ctx context.Context, params ModifyRoleParams) middleware.Responder {
	return fn(ctx, params)
}

// ModifyRoleHandler interface for that can handle valid modify role params
type ModifyRoleHandler interface {
	Handle(context.Context, ModifyRoleParams) middleware.Responder
}

// NewModifyRole creates a new http.Handler for the modify role operation
func NewModifyRole(ctx *middleware.Context, handler ModifyRoleHandler) *ModifyRole {
	return &ModifyRole{Context: ctx, Handler: handler}
}

/*ModifyRole swagger:route PATCH /roles/{name} /api/2.0 modifyRole

Patch a role

Modify the properties of a role.

*/
type ModifyRole struct {
	Context *middleware.Context
	Handler ModifyRoleHandler
}

func (o *ModifyRole) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewModifyRoleParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ModifyRoleOKBody modify role o k body
// swagger:model ModifyRoleOKBody
type ModifyRoleOKBody interface{}

// ModifyRoleUnauthorizedBody modify role unauthorized body
// swagger:model ModifyRoleUnauthorizedBody
type ModifyRoleUnauthorizedBody interface{}

// ModifyRoleForbiddenBody modify role forbidden body
// swagger:model ModifyRoleForbiddenBody
type ModifyRoleForbiddenBody interface{}
