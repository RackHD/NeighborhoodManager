package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NodesDelByIDHandlerFunc turns a function with the right signature into a nodes del by Id handler
type NodesDelByIDHandlerFunc func(context.Context, NodesDelByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NodesDelByIDHandlerFunc) Handle(ctx context.Context, params NodesDelByIDParams) middleware.Responder {
	return fn(ctx, params)
}

// NodesDelByIDHandler interface for that can handle valid nodes del by Id params
type NodesDelByIDHandler interface {
	Handle(context.Context, NodesDelByIDParams) middleware.Responder
}

// NewNodesDelByID creates a new http.Handler for the nodes del by Id operation
func NewNodesDelByID(ctx *middleware.Context, handler NodesDelByIDHandler) *NodesDelByID {
	return &NodesDelByID{Context: ctx, Handler: handler}
}

/*NodesDelByID swagger:route DELETE /nodes/{identifier} /api/2.0 nodesDelById

Delete a node

Delete the specified node.

*/
type NodesDelByID struct {
	Context *middleware.Context
	Handler NodesDelByIDHandler
}

func (o *NodesDelByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewNodesDelByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
