package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PollersPostHandlerFunc turns a function with the right signature into a pollers post handler
type PollersPostHandlerFunc func(PollersPostParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PollersPostHandlerFunc) Handle(params PollersPostParams) middleware.Responder {
	return fn(params)
}

// PollersPostHandler interface for that can handle valid pollers post params
type PollersPostHandler interface {
	Handle(PollersPostParams) middleware.Responder
}

// NewPollersPost creates a new http.Handler for the pollers post operation
func NewPollersPost(ctx *middleware.Context, handler PollersPostHandler) *PollersPost {
	return &PollersPost{Context: ctx, Handler: handler}
}

/*PollersPost swagger:route POST /pollers /api/2.0 pollersPost

Post a poller

Create and start a new poller, which will run at the specified time interval.

*/
type PollersPost struct {
	Context *middleware.Context
	Handler PollersPostHandler
}

func (o *PollersPost) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPollersPostParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PollersPostCreatedBody pollers post created body
// swagger:model PollersPostCreatedBody
type PollersPostCreatedBody interface{}
