package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// FilesDeleteHandlerFunc turns a function with the right signature into a files delete handler
type FilesDeleteHandlerFunc func(FilesDeleteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FilesDeleteHandlerFunc) Handle(params FilesDeleteParams) middleware.Responder {
	return fn(params)
}

// FilesDeleteHandler interface for that can handle valid files delete params
type FilesDeleteHandler interface {
	Handle(FilesDeleteParams) middleware.Responder
}

// NewFilesDelete creates a new http.Handler for the files delete operation
func NewFilesDelete(ctx *middleware.Context, handler FilesDeleteHandler) *FilesDelete {
	return &FilesDelete{Context: ctx, Handler: handler}
}

/*FilesDelete swagger:route DELETE /files/{fileidentifier} /api/2.0 filesDelete

Delete a file

Delete a file based on uuid.

*/
type FilesDelete struct {
	Context *middleware.Context
	Handler FilesDeleteHandler
}

func (o *FilesDelete) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewFilesDeleteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
