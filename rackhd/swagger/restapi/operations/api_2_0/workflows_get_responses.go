package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/swagger/models"
)

/*WorkflowsGetOK Successfull retrieved workflows

swagger:response workflowsGetOK
*/
type WorkflowsGetOK struct {

	// In: body
	Payload WorkflowsGetOKBody `json:"body,omitempty"`
}

// NewWorkflowsGetOK creates WorkflowsGetOK with default headers values
func NewWorkflowsGetOK() *WorkflowsGetOK {
	return &WorkflowsGetOK{}
}

// WithPayload adds the payload to the workflows get o k response
func (o *WorkflowsGetOK) WithPayload(payload WorkflowsGetOKBody) *WorkflowsGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the workflows get o k response
func (o *WorkflowsGetOK) SetPayload(payload WorkflowsGetOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WorkflowsGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*WorkflowsGetDefault Unexpected error

swagger:response workflowsGetDefault
*/
type WorkflowsGetDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewWorkflowsGetDefault creates WorkflowsGetDefault with default headers values
func NewWorkflowsGetDefault(code int) *WorkflowsGetDefault {
	if code <= 0 {
		code = 500
	}

	return &WorkflowsGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the workflows get default response
func (o *WorkflowsGetDefault) WithStatusCode(code int) *WorkflowsGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the workflows get default response
func (o *WorkflowsGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the workflows get default response
func (o *WorkflowsGetDefault) WithPayload(payload *models.Error) *WorkflowsGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the workflows get default response
func (o *WorkflowsGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WorkflowsGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
