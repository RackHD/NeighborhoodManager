package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/swagger/models"
)

/*ObmsGetOK Successfully retrieved the list of OBM service instances

swagger:response obmsGetOK
*/
type ObmsGetOK struct {

	// In: body
	Payload ObmsGetOKBody `json:"body,omitempty"`
}

// NewObmsGetOK creates ObmsGetOK with default headers values
func NewObmsGetOK() *ObmsGetOK {
	return &ObmsGetOK{}
}

// WithPayload adds the payload to the obms get o k response
func (o *ObmsGetOK) WithPayload(payload ObmsGetOKBody) *ObmsGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the obms get o k response
func (o *ObmsGetOK) SetPayload(payload ObmsGetOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ObmsGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ObmsGetDefault Unexpected error

swagger:response obmsGetDefault
*/
type ObmsGetDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewObmsGetDefault creates ObmsGetDefault with default headers values
func NewObmsGetDefault(code int) *ObmsGetDefault {
	if code <= 0 {
		code = 500
	}

	return &ObmsGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the obms get default response
func (o *ObmsGetDefault) WithStatusCode(code int) *ObmsGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the obms get default response
func (o *ObmsGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the obms get default response
func (o *ObmsGetDefault) WithPayload(payload *models.Error) *ObmsGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the obms get default response
func (o *ObmsGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ObmsGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
