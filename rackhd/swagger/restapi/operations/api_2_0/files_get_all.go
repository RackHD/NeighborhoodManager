package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// FilesGetAllHandlerFunc turns a function with the right signature into a files get all handler
type FilesGetAllHandlerFunc func(FilesGetAllParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FilesGetAllHandlerFunc) Handle(params FilesGetAllParams) middleware.Responder {
	return fn(params)
}

// FilesGetAllHandler interface for that can handle valid files get all params
type FilesGetAllHandler interface {
	Handle(FilesGetAllParams) middleware.Responder
}

// NewFilesGetAll creates a new http.Handler for the files get all operation
func NewFilesGetAll(ctx *middleware.Context, handler FilesGetAllHandler) *FilesGetAll {
	return &FilesGetAll{Context: ctx, Handler: handler}
}

/*FilesGetAll swagger:route GET /files /api/2.0 filesGetAll

Get all files

Get a list of all files currently stored.

*/
type FilesGetAll struct {
	Context *middleware.Context
	Handler FilesGetAllHandler
}

func (o *FilesGetAll) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewFilesGetAllParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// FilesGetAllOKBody files get all o k body
// swagger:model FilesGetAllOKBody
type FilesGetAllOKBody interface{}
