package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ProfilesGetHandlerFunc turns a function with the right signature into a profiles get handler
type ProfilesGetHandlerFunc func(ProfilesGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ProfilesGetHandlerFunc) Handle(params ProfilesGetParams) middleware.Responder {
	return fn(params)
}

// ProfilesGetHandler interface for that can handle valid profiles get params
type ProfilesGetHandler interface {
	Handle(ProfilesGetParams) middleware.Responder
}

// NewProfilesGet creates a new http.Handler for the profiles get operation
func NewProfilesGet(ctx *middleware.Context, handler ProfilesGetHandler) *ProfilesGet {
	return &ProfilesGet{Context: ctx, Handler: handler}
}

/*ProfilesGet swagger:route GET /profiles /api/2.0 profilesGet

Get list of profiles

Get the list of currently defined profiles. Profiles are scripts used by RackHD to control how a node PXE boots.


*/
type ProfilesGet struct {
	Context *middleware.Context
	Handler ProfilesGetHandler
}

func (o *ProfilesGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewProfilesGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ProfilesGetOKBody profiles get o k body
// swagger:model ProfilesGetOKBody
type ProfilesGetOKBody interface{}
