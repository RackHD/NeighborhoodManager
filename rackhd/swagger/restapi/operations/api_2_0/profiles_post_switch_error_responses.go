package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/RackHD/neighborhood-manager/swagger/models"
)

/*ProfilesPostSwitchErrorCreated Successfully posted the switch error

swagger:response profilesPostSwitchErrorCreated
*/
type ProfilesPostSwitchErrorCreated struct {

	// In: body
	Payload ProfilesPostSwitchErrorCreatedBody `json:"body,omitempty"`
}

// NewProfilesPostSwitchErrorCreated creates ProfilesPostSwitchErrorCreated with default headers values
func NewProfilesPostSwitchErrorCreated() *ProfilesPostSwitchErrorCreated {
	return &ProfilesPostSwitchErrorCreated{}
}

// WithPayload adds the payload to the profiles post switch error created response
func (o *ProfilesPostSwitchErrorCreated) WithPayload(payload ProfilesPostSwitchErrorCreatedBody) *ProfilesPostSwitchErrorCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profiles post switch error created response
func (o *ProfilesPostSwitchErrorCreated) SetPayload(payload ProfilesPostSwitchErrorCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfilesPostSwitchErrorCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ProfilesPostSwitchErrorInternalServerError Upload failed

swagger:response profilesPostSwitchErrorInternalServerError
*/
type ProfilesPostSwitchErrorInternalServerError struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewProfilesPostSwitchErrorInternalServerError creates ProfilesPostSwitchErrorInternalServerError with default headers values
func NewProfilesPostSwitchErrorInternalServerError() *ProfilesPostSwitchErrorInternalServerError {
	return &ProfilesPostSwitchErrorInternalServerError{}
}

// WithPayload adds the payload to the profiles post switch error internal server error response
func (o *ProfilesPostSwitchErrorInternalServerError) WithPayload(payload *models.Error) *ProfilesPostSwitchErrorInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profiles post switch error internal server error response
func (o *ProfilesPostSwitchErrorInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfilesPostSwitchErrorInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ProfilesPostSwitchErrorDefault Unexpected error

swagger:response profilesPostSwitchErrorDefault
*/
type ProfilesPostSwitchErrorDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewProfilesPostSwitchErrorDefault creates ProfilesPostSwitchErrorDefault with default headers values
func NewProfilesPostSwitchErrorDefault(code int) *ProfilesPostSwitchErrorDefault {
	if code <= 0 {
		code = 500
	}

	return &ProfilesPostSwitchErrorDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the profiles post switch error default response
func (o *ProfilesPostSwitchErrorDefault) WithStatusCode(code int) *ProfilesPostSwitchErrorDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the profiles post switch error default response
func (o *ProfilesPostSwitchErrorDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the profiles post switch error default response
func (o *ProfilesPostSwitchErrorDefault) WithPayload(payload *models.Error) *ProfilesPostSwitchErrorDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profiles post switch error default response
func (o *ProfilesPostSwitchErrorDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfilesPostSwitchErrorDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
