package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// WorkflowsGetAllTasksHandlerFunc turns a function with the right signature into a workflows get all tasks handler
type WorkflowsGetAllTasksHandlerFunc func(WorkflowsGetAllTasksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn WorkflowsGetAllTasksHandlerFunc) Handle(params WorkflowsGetAllTasksParams) middleware.Responder {
	return fn(params)
}

// WorkflowsGetAllTasksHandler interface for that can handle valid workflows get all tasks params
type WorkflowsGetAllTasksHandler interface {
	Handle(WorkflowsGetAllTasksParams) middleware.Responder
}

// NewWorkflowsGetAllTasks creates a new http.Handler for the workflows get all tasks operation
func NewWorkflowsGetAllTasks(ctx *middleware.Context, handler WorkflowsGetAllTasksHandler) *WorkflowsGetAllTasks {
	return &WorkflowsGetAllTasks{Context: ctx, Handler: handler}
}

/*WorkflowsGetAllTasks swagger:route GET /workflows/tasks /api/2.0 workflowsGetAllTasks

Get list of workflow tasks

Get a list of all workflow tasks that can be added to a workflow.

*/
type WorkflowsGetAllTasks struct {
	Context *middleware.Context
	Handler WorkflowsGetAllTasksHandler
}

func (o *WorkflowsGetAllTasks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewWorkflowsGetAllTasksParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// WorkflowsGetAllTasksOKBody workflows get all tasks o k body
// swagger:model WorkflowsGetAllTasksOKBody
type WorkflowsGetAllTasksOKBody interface{}
