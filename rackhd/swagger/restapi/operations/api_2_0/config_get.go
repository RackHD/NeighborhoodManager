package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ConfigGetHandlerFunc turns a function with the right signature into a config get handler
type ConfigGetHandlerFunc func(ConfigGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ConfigGetHandlerFunc) Handle(params ConfigGetParams) middleware.Responder {
	return fn(params)
}

// ConfigGetHandler interface for that can handle valid config get params
type ConfigGetHandler interface {
	Handle(ConfigGetParams) middleware.Responder
}

// NewConfigGet creates a new http.Handler for the config get operation
func NewConfigGet(ctx *middleware.Context, handler ConfigGetHandler) *ConfigGet {
	return &ConfigGet{Context: ctx, Handler: handler}
}

/*ConfigGet swagger:route GET /config /api/2.0 configGet

Get server configuration

Get the RackHD server configuration properties.

*/
type ConfigGet struct {
	Context *middleware.Context
	Handler ConfigGetHandler
}

func (o *ConfigGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewConfigGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ConfigGetOKBody config get o k body
// swagger:model ConfigGetOKBody
type ConfigGetOKBody interface{}
