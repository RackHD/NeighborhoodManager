package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListRolesHandlerFunc turns a function with the right signature into a list roles handler
type ListRolesHandlerFunc func(ListRolesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListRolesHandlerFunc) Handle(params ListRolesParams) middleware.Responder {
	return fn(params)
}

// ListRolesHandler interface for that can handle valid list roles params
type ListRolesHandler interface {
	Handle(ListRolesParams) middleware.Responder
}

// NewListRoles creates a new http.Handler for the list roles operation
func NewListRoles(ctx *middleware.Context, handler ListRolesHandler) *ListRoles {
	return &ListRoles{Context: ctx, Handler: handler}
}

/*ListRoles swagger:route GET /roles /api/2.0 listRoles

Get the list of roles

Get the list of roles currently stored in the system.

*/
type ListRoles struct {
	Context *middleware.Context
	Handler ListRolesHandler
}

func (o *ListRoles) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewListRolesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ListRolesUnauthorizedBody list roles unauthorized body
// swagger:model ListRolesUnauthorizedBody
type ListRolesUnauthorizedBody interface{}

// ListRolesForbiddenBody list roles forbidden body
// swagger:model ListRolesForbiddenBody
type ListRolesForbiddenBody interface{}
