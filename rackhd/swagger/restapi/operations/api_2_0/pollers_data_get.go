package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PollersDataGetHandlerFunc turns a function with the right signature into a pollers data get handler
type PollersDataGetHandlerFunc func(PollersDataGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PollersDataGetHandlerFunc) Handle(params PollersDataGetParams) middleware.Responder {
	return fn(params)
}

// PollersDataGetHandler interface for that can handle valid pollers data get params
type PollersDataGetHandler interface {
	Handle(PollersDataGetParams) middleware.Responder
}

// NewPollersDataGet creates a new http.Handler for the pollers data get operation
func NewPollersDataGet(ctx *middleware.Context, handler PollersDataGetHandler) *PollersDataGet {
	return &PollersDataGet{Context: ctx, Handler: handler}
}

/*PollersDataGet swagger:route GET /pollers/{identifier}/data /api/2.0 pollersDataGet

Get output data for a poller

Get the complete history of output data generated by the poller with the specified identifier.


*/
type PollersDataGet struct {
	Context *middleware.Context
	Handler PollersDataGetHandler
}

func (o *PollersDataGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPollersDataGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PollersDataGetOKBody pollers data get o k body
// swagger:model PollersDataGetOKBody
type PollersDataGetOKBody interface{}

// PollersDataGetNoContentBody pollers data get no content body
// swagger:model PollersDataGetNoContentBody
type PollersDataGetNoContentBody interface{}
