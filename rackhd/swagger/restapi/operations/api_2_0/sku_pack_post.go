package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// SkuPackPostHandlerFunc turns a function with the right signature into a sku pack post handler
type SkuPackPostHandlerFunc func(SkuPackPostParams) middleware.Responder

// Handle executing the request and returning a response
func (fn SkuPackPostHandlerFunc) Handle(params SkuPackPostParams) middleware.Responder {
	return fn(params)
}

// SkuPackPostHandler interface for that can handle valid sku pack post params
type SkuPackPostHandler interface {
	Handle(SkuPackPostParams) middleware.Responder
}

// NewSkuPackPost creates a new http.Handler for the sku pack post operation
func NewSkuPackPost(ctx *middleware.Context, handler SkuPackPostHandler) *SkuPackPost {
	return &SkuPackPost{Context: ctx, Handler: handler}
}

/*SkuPackPost swagger:route POST /skus/pack /api/2.0 skuPackPost

Post a SKU Pack

Create a new SKU Pack, which is used to serve a specific set of files to a node during provisioning.


*/
type SkuPackPost struct {
	Context *middleware.Context
	Handler SkuPackPostHandler
}

func (o *SkuPackPost) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewSkuPackPostParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// SkuPackPostCreatedBody sku pack post created body
// swagger:model SkuPackPostCreatedBody
type SkuPackPostCreatedBody interface{}
